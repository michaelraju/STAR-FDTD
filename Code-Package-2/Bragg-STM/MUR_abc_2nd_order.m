function [Enp1,Esrc_np1] = MUR_abc_2nd_order(Enm1,En,Enp1,Esrc_nm1,Esrc_n,Esrc_np1,term1,term2,term3)
%                                   Code written by
%                                   Michael Raju
%                                   Biophotonics@Tyndall National Institute
%-------- Analytic absorbing/outoging boundary conditions (ABC)------------
% Refer Taflove and Hagness, 6.3.3 Trefethen-Halpern Generalized and 
%   Higher-Order ABCs.
% ABC implemented only at z=z_start and z=z_end
%---------------- Second order Mur at z=Zend ------------------------------
Enp1(2:end-1,end)=-Enm1(2:end-1,end-1) + (term3).*(Enp1(2:end-1,end-1) + Enm1(2:end-1,end)) + ...
                 term2.*(En(2:end-1,end-1) + En(2:end-1,end)) + ...
                 term1.*(En(3:end,end-1)-2.*En(2:end-1,end-1)+En(1:end-2,end-1)) + ...
                 term1.*(En(3:end,end)-2.*En(2:end-1,end)+En(1:end-2,end));
%---------------- Second order Mur at z=0----------------------------------
Enp1(2:end-1,1)=-Enm1(2:end-1,2) + (term3).*(Enp1(2:end-1,2) + Enm1(2:end-1,1)) + ...
                 term2.*(En(2:end-1,2) + En(2:end-1,1)) + ...
                 term1.*(En(3:end,2)-2.*En(2:end-1,2)+En(1:end-2,2)) + ...
                 term1.*(En(3:end,1)-2.*En(2:end-1,1)+En(1:end-2,1));      
%---------------- second order Mur at z=Zend for the source ---------------
Esrc_np1(2:end-1,end)=-Esrc_nm1(2:end-1,end-1) + (term3).*(Esrc_np1(2:end-1,end-1) + Esrc_nm1(2:end-1,end)) + ...
             term2.*(Esrc_n(2:end-1,end-1) + Esrc_n(2:end-1,end)) + ...
             term1.*(Esrc_n(3:end,end-1)-2.*Esrc_n(2:end-1,end-1)+Esrc_n(1:end-2,end-1)) + ...
             term1.*(Esrc_n(3:end,end)-2.*Esrc_n(2:end-1,end)+Esrc_n(1:end-2,end)) ;
%---------------- second order Mur at z=0 for the source ------------------
Esrc_np1(2:end-1,1)=-Esrc_nm1(2:end-1,2) + (term3).*(Esrc_np1(2:end-1,2) + Esrc_nm1(2:end-1,1)) + ...
            term2.*(Esrc_n(2:end-1,2) + Esrc_n(2:end-1,1)) + ...
            term1.*(Esrc_n(3:end,2)-2.*Esrc_n(2:end-1,2)+Esrc_n(1:end-2,2)) + ...
            term1.*(Esrc_n(3:end,1)-2.*Esrc_n(2:end-1,1)+Esrc_n(1:end-2,1));      
end
                
             
             
             
